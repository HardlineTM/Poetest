# handlers/city.py
import logging
import math
from aiogram import F, Router, types
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.utils.text_decorations import html_decoration as hd

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
from database.db_manager import get_player, update_player_vitals, update_player_xp, check_and_apply_regen

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏)
# logging.basicConfig(level=logging.INFO, format="%(asctime)s - %(levelname)s - %(name)s - %(message)s")

router = Router()

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –ª–µ–∫–∞—Ä–µ–º
class HealerStates(StatesGroup):
    choosing_heal_option = State() # –°–æ—Å—Ç–æ—è–Ω–∏–µ, –∫–æ–≥–¥–∞ –∏–≥—Ä–æ–∫ –≤–∏–¥–∏—Ç –æ–ø—Ü–∏–∏ –ª–µ—á–µ–Ω–∏—è

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –ª–µ—á–µ–Ω–∏—è
HEAL_BASE_COST = 5 # –ë–∞–∑–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞ 25% –ª–µ—á–µ–Ω–∏—è –Ω–∞ 1 —É—Ä–æ–≤–Ω–µ
HEAL_LEVEL_MULTIPLIER = 0.1 # –°—Ç–æ–∏–º–æ—Å—Ç—å —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è –Ω–∞ 10% –∑–∞ –∫–∞–∂–¥—ã–π —É—Ä–æ–≤–µ–Ω—å –≤—ã—à–µ –ø–µ—Ä–≤–æ–≥–æ

# --- –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –õ–µ–∫–∞—Ä—è ---
def get_healer_options_keyboard(player_level: int, current_hp: int, max_hp: int, current_mana: int, max_mana: int, player_gold: int) -> InlineKeyboardMarkup:
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –æ–ø—Ü–∏—è–º–∏ –ª–µ—á–µ–Ω–∏—è —É –õ–µ–∫–∞—Ä—è.
    –ö–Ω–æ–ø–∫–∏ –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç –ø—Ä–æ—Ü–µ–Ω—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è, —Å—Ç–æ–∏–º–æ—Å—Ç—å –∏ –¥–æ—Å—Ç—É–ø–Ω—ã –ª–∏ –æ–Ω–∏.
    """
    buttons = []
    # –°–ª–æ–≤–∞—Ä—å –æ–ø—Ü–∏–π: —Ç–∏–ø —Ä–µ—Å—É—Ä—Å–∞ -> —Å–ø–∏—Å–æ–∫ –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤
    options = {
        'hp': [25, 50, 100],
        'mana': [25, 50, 100]
    }

    for resource_type, percentages in options.items():
        for percent in percentages:
            # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–ª—è –¥–∞–Ω–Ω–æ–π –æ–ø—Ü–∏–∏
            # –§–æ—Ä–º—É–ª–∞: –±–∞–∑–∞ * (–ø—Ä–æ—Ü–µ–Ω—Ç/25) * (1 + (—É—Ä–æ–≤–µ–Ω—å - 1) * –º–Ω–æ–∂–∏—Ç–µ–ª—å)
            cost_multiplier = 1 + (player_level - 1) * HEAL_LEVEL_MULTIPLIER
            # –û–∫—Ä—É–≥–ª—è–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å –≤–≤–µ—Ä—Ö –¥–æ —Ü–µ–ª–æ–≥–æ —á–∏—Å–ª–∞
            cost = math.ceil(HEAL_BASE_COST * (percent / 25) * cost_multiplier)

            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ –∏ –µ—ë callback_data
            label_prefix = "‚ù§Ô∏è HP" if resource_type == 'hp' else "üíß Mana"
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ–ª–Ω—ã–π –ª–∏ —Ä–µ—Å—É—Ä—Å —É –∏–≥—Ä–æ–∫–∞
            is_full = (resource_type == 'hp' and current_hp >= max_hp) or \
                      (resource_type == 'mana' and current_mana >= max_mana)
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Ö–≤–∞—Ç–∞–µ—Ç –ª–∏ –∑–æ–ª–æ—Ç–∞
            can_afford = player_gold >= cost

            if is_full:
                # –ï—Å–ª–∏ —Ä–µ—Å—É—Ä—Å –ø–æ–ª–Ω—ã–π, –∫–Ω–æ–ø–∫–∞ –Ω–µ–∞–∫—Ç–∏–≤–Ω–∞ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥–∞–ª–æ—á–∫—É
                button_text = f"‚úÖ {label_prefix} (–ü–æ–ª–Ω–æ–µ)"
                callback_data = "heal:noop" # noop - –Ω–µ—Ç –æ–ø–µ—Ä–∞—Ü–∏–∏
            elif can_afford:
                # –ï—Å–ª–∏ –º–æ–∂–Ω–æ –∫—É–ø–∏—Ç—å, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å –∏ –∞–∫—Ç–∏–≤–Ω—É—é –∫–Ω–æ–ø–∫—É
                button_text = f"{label_prefix} +{percent}% ({cost}üí∞)"
                callback_data = f"heal:{resource_type}:{percent}:{cost}"
            else:
                # –ï—Å–ª–∏ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –∑–æ–ª–æ—Ç–∞, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫—Ä–µ—Å—Ç–∏–∫ –∏ —Å—Ç–æ–∏–º–æ—Å—Ç—å
                button_text = f"‚ùå {label_prefix} +{percent}% ({cost}üí∞)"
                callback_data = f"heal:no_gold:{cost}" # –û—Ç–¥–µ–ª—å–Ω—ã–π callback –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–µ—Ö–≤–∞—Ç–∫–∏ –∑–æ–ª–æ—Ç–∞

            # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤ —Å–ø–∏—Å–æ–∫
            buttons.append([InlineKeyboardButton(text=button_text, callback_data=callback_data)])

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ –º–µ–Ω—é –ª–µ–∫–∞—Ä—è
    buttons.append([InlineKeyboardButton(text="–í—ã–π—Ç–∏", callback_data="heal:cancel")])

    # –°–æ–∑–¥–∞–µ–º –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—ä–µ–∫—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    return InlineKeyboardMarkup(inline_keyboard=buttons)


# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –°–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–õ–µ–∫–∞—Ä—å" ---
@router.message(F.text.lower() == "‚öïÔ∏è –ª–µ–∫–∞—Ä—å")
async def healer_start(message: types.Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–õ–µ–∫–∞—Ä—å" –≤ –º–µ–Ω—é –≥–æ—Ä–æ–¥–∞.
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –ª–µ–∫–∞—Ä—è –∏ –∫–Ω–æ–ø–∫–∏ —Å –æ–ø—Ü–∏—è–º–∏ –ª–µ—á–µ–Ω–∏—è.
    """
    user_id = message.from_user.id
    logging.info(f"User {user_id} accessed the healer.")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –ø—Ä–∏–º–µ–Ω—è–µ–º —Ä–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏—é –ø–µ—Ä–µ–¥ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –æ–ø—Ü–∏–π
    current_state_str = await state.get_state()
    await check_and_apply_regen(user_id, current_state_str)

    # –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–≥—Ä–æ–∫–∞ –ü–û–°–õ–ï —Ä–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
    player = await get_player(user_id)

    if not player:
        logging.warning(f"Non-player {user_id} tried to access the healer.")
        await message.answer("–°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞: /start")
        return

    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–∫—É—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö –∏–≥—Ä–æ–∫–∞
    keyboard = get_healer_options_keyboard(
        player['level'], player['current_hp'], player['max_hp'],
        player['current_mana'], player['max_mana'], player['gold']
    )

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, –∏–∑–≥–Ω–∞–Ω–Ω–∏–∫! –•–æ—á–µ—à—å –ø–æ–¥–ª–µ—á–∏—Ç—å—Å—è –∏–ª–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–∏–ª—ã?\n"
        f"<i>(–í–∞—à–µ –∑–æ–ª–æ—Ç–æ: {player['gold']}üí∞)</i>\n" # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–µ–µ –∑–æ–ª–æ—Ç–æ
        "–í—ã–±–µ—Ä–∏ —É—Å–ª—É–≥—É:",
        reply_markup=keyboard,
        parse_mode="HTML" # –ò—Å–ø–æ–ª—å–∑—É–µ–º HTML –¥–ª—è –∫—É—Ä—Å–∏–≤–∞
    )
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ, —á—Ç–æ –∏–≥—Ä–æ–∫ –≤—ã–±–∏—Ä–∞–µ—Ç –æ–ø—Ü–∏—é —É –ª–µ–∫–∞—Ä—è
    await state.set_state(HealerStates.choosing_heal_option)


# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ Callback'–æ–≤ –æ—Ç –∫–Ω–æ–ø–æ–∫ –õ–µ–∫–∞—Ä—è ---
@router.callback_query(HealerStates.choosing_heal_option, F.data.startswith("heal:"))
async def process_healer_option(callback: types.CallbackQuery, state: FSMContext):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏ –≤ –º–µ–Ω—é –ª–µ–∫–∞—Ä—è.
    –†–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ choosing_heal_option.
    """
    # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback, —á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å "—á–∞—Å–∏–∫–∏"
    await callback.answer()
    user_id = callback.from_user.id
    # –†–∞–∑–±–∏—Ä–∞–µ–º callback_data, –Ω–∞–ø—Ä–∏–º–µ—Ä: "heal:hp:50:20" –∏–ª–∏ "heal:cancel"
    action_data = callback.data.split(":")
    action = action_data[1] # –¢–∏–ø –¥–µ–π—Å—Ç–≤–∏—è: hp, mana, cancel, noop, no_gold

    logging.debug(f"User {user_id} healer action: {action}, data: {callback.data}")

    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —É–ø—Ä–∞–≤–ª—è—é—â–∏–µ –¥–µ–π—Å—Ç–≤–∏—è
    if action == "cancel":
        logging.info(f"User {user_id} cancelled healing.")
        await callback.message.edit_text("–ë–µ—Ä–µ–≥–∏ —Å–µ–±—è, –∏–∑–≥–Ω–∞–Ω–Ω–∏–∫!")
        await state.clear() # –í—ã—Ö–æ–¥–∏–º –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ª–µ–∫–∞—Ä—è
        return
    if action == "noop":
        # –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ä–µ—Å—É—Ä—Å–∞, –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º
        logging.debug(f"User {user_id} clicked noop heal button.")
        return
    if action == "no_gold":
        # –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞, –Ω–∞ –∫–æ—Ç–æ—Ä—É—é –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –∑–æ–ª–æ—Ç–∞
        try:
            needed_gold = int(action_data[2])
            # –û—Ç–≤–µ—á–∞–µ–º –≤—Å–ø–ª—ã–≤–∞—é—â–∏–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ–º (alert)
            await callback.answer(f"–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∑–æ–ª–æ—Ç–∞! –¢—Ä–µ–±—É–µ—Ç—Å—è {needed_gold}üí∞.", show_alert=True)
        except (IndexError, ValueError):
            # –ï—Å–ª–∏ —Å—Ç–æ–∏–º–æ—Å—Ç—å –Ω–µ –ø–µ—Ä–µ–¥–∞–ª–∞—Å—å, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            await callback.answer("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∑–æ–ª–æ—Ç–∞!", show_alert=True)
        logging.debug(f"User {user_id} clicked unaffordable heal button ({callback.data}).")
        # –ù–µ –º–µ–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –Ω–µ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ, —á—Ç–æ–±—ã –¥–∞—Ç—å –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é –æ–ø—Ü–∏—é
        return

    # --- –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–∫—É–ø–∫–∏ –ª–µ—á–µ–Ω–∏—è ---
    # –û–∂–∏–¥–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç: "heal:type:percent:cost"
    if len(action_data) != 4:
         logging.error(f"Invalid healer callback data format: {callback.data} for user {user_id}")
         await callback.message.edit_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
         await state.clear()
         return

    resource_type = action_data[1] # 'hp' –∏–ª–∏ 'mana'
    try:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –ø—Ä–æ—Ü–µ–Ω—Ç –∏ –æ–∂–∏–¥–∞–µ–º—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –∏–∑ callback'–∞
        percent_to_heal = int(action_data[2])
        expected_cost = int(action_data[3])
    except ValueError:
        logging.error(f"Invalid numeric values in healer callback data: {callback.data} for user {user_id}")
        await callback.message.edit_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ —á–∏—Å–ª–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
        await state.clear()
        return

    # –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–≥—Ä–æ–∫–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ —Ä–∞—Å—á–µ—Ç–∞
    player = await get_player(user_id)
    if not player:
        logging.error(f"Could not retrieve player data for {user_id} during healing purchase.")
        await callback.message.edit_text("–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –¥–∞–Ω–Ω—ã–µ –≤–∞—à–µ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞.")
        await state.clear()
        return

    # --- –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏: –ø–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ ---
    cost_multiplier = 1 + (player['level'] - 1) * HEAL_LEVEL_MULTIPLIER
    actual_cost = math.ceil(HEAL_BASE_COST * (percent_to_heal / 25) * cost_multiplier)

    # –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å —Å –∫–Ω–æ–ø–∫–∏ –∏ —Ä–∞—Å—Å—á–∏—Ç–∞–Ω–Ω—É—é –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
    if actual_cost != expected_cost:
         logging.warning(f"Healer cost mismatch for user {user_id}. Button cost: {expected_cost}, Server cost: {actual_cost}. Callback: {callback.data}")
         # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∞–∫—Ç—É–∞–ª—å–Ω—ã–º–∏ —Ü–µ–Ω–∞–º–∏
         new_keyboard = get_healer_options_keyboard(
             player['level'], player['current_hp'], player['max_hp'],
             player['current_mana'], player['max_mana'], player['gold']
         )
         # –ü—Ä–æ—Å–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤—ã–±—Ä–∞—Ç—å —Å–Ω–æ–≤–∞
         await callback.message.edit_text(
             "–¶–µ–Ω—ã –Ω–∞ –ª–µ—á–µ–Ω–∏–µ –º–æ–≥–ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å—Å—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Å–Ω–æ–≤–∞:",
             reply_markup=new_keyboard
         )
         # –ù–µ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –¥–∞–µ–º –≤—ã–±—Ä–∞—Ç—å –µ—â–µ —Ä–∞–∑
         return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Ö–≤–∞—Ç–∞–µ—Ç –ª–∏ –∑–æ–ª–æ—Ç–∞ (—Ö–æ—Ç—è –∫–Ω–æ–ø–∫–∞ no_gold –¥–æ–ª–∂–Ω–∞ –±—ã–ª–∞ —ç—Ç–æ –æ—Ç—Å–µ—á—å)
    if player['gold'] < actual_cost:
        logging.warning(f"User {user_id} attempted to buy healing without enough gold. Needed: {actual_cost}, Has: {player['gold']}")
        await callback.message.edit_text(f"–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∑–æ–ª–æ—Ç–∞! –ù—É–∂–Ω–æ {actual_cost}üí∞, –∞ —É –≤–∞—Å {player['gold']}üí∞.")
        await state.clear() # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ, —Ç–∞–∫ –∫–∞–∫ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å
        return

    # --- –ü—Ä–æ–≤–µ–¥–µ–Ω–∏–µ –ª–µ—á–µ–Ω–∏—è ---
    amount_to_restore_calc = 0 # –°–∫–æ–ª—å–∫–æ –µ–¥–∏–Ω–∏—Ü –ø—ã—Ç–∞–µ–º—Å—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å
    target_value = 0           # –î–æ –∫–∞–∫–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è —Ä–µ—Å—É—Ä—Å
    current_value = 0          # –¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–∞ –¥–æ –ª–µ—á–µ–Ω–∏—è
    resource_name = ""         # –ù–∞–∑–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–∞ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è

    if resource_type == 'hp':
        resource_name = "–∑–¥–æ—Ä–æ–≤—å–µ"
        current_value = player['current_hp']
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –≤–æ–æ–±—â–µ –ª–µ—á–∏—Ç—å HP
        if current_value >= player['max_hp']:
             logging.debug(f"User {user_id} tried to heal full HP.")
             await callback.answer("–í–∞—à–µ –∑–¥–æ—Ä–æ–≤—å–µ —É–∂–µ –ø–æ–ª–Ω–æ–µ!", show_alert=True)
             return # –û—Å—Ç–∞–µ–º—Å—è –≤ –º–µ–Ω—é –ª–µ–∫–∞—Ä—è

        # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ HP –∫ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—é –æ—Ç –ú–ê–ö–°–ò–ú–ê–õ–¨–ù–û–ì–û HP
        amount_to_restore_calc = math.ceil(player['max_hp'] * (percent_to_heal / 100.0))
        # –¶–µ–ª–µ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ - —Ç–µ–∫—É—â–µ–µ + –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ, –Ω–æ –Ω–µ –±–æ–ª—å—à–µ –º–∞–∫—Å–∏–º—É–º–∞
        target_value = min(player['max_hp'], current_value + amount_to_restore_calc)
        # –ü—Ä–∏–º–µ–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ —á–µ—Ä–µ–∑ set_hp –¥–ª—è —Ç–æ—á–Ω–æ—Å—Ç–∏
        await update_player_vitals(user_id, set_hp=target_value)

    elif resource_type == 'mana':
        resource_name = "–º–∞–Ω—É"
        current_value = player['current_mana']
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å –º–∞–Ω—É
        if current_value >= player['max_mana']:
            logging.debug(f"User {user_id} tried to heal full Mana.")
            await callback.answer("–í–∞—à–∞ –º–∞–Ω–∞ —É–∂–µ –ø–æ–ª–Ω–∞—è!", show_alert=True)
            return # –û—Å—Ç–∞–µ–º—Å—è –≤ –º–µ–Ω—é –ª–µ–∫–∞—Ä—è

        # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∞–Ω—ã –∫ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—é –æ—Ç –ú–ê–ö–°–ò–ú–ê–õ–¨–ù–û–ô –º–∞–Ω—ã
        amount_to_restore_calc = math.ceil(player['max_mana'] * (percent_to_heal / 100.0))
        # –¶–µ–ª–µ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ - —Ç–µ–∫—É—â–µ–µ + –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ, –Ω–æ –Ω–µ –±–æ–ª—å—à–µ –º–∞–∫—Å–∏–º—É–º–∞
        target_value = min(player['max_mana'], current_value + amount_to_restore_calc)
        # –ü—Ä–∏–º–µ–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ —á–µ—Ä–µ–∑ set_mana
        await update_player_vitals(user_id, set_mana=target_value)
    else:
        # –ï—Å–ª–∏ —Ç–∏–ø —Ä–µ—Å—É—Ä—Å–∞ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω
        logging.error(f"Invalid resource type '{resource_type}' in healer logic for user {user_id}")
        await callback.message.edit_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ —Ç–∏–ø–∞ —Ä–µ—Å—É—Ä—Å–∞.")
        await state.clear()
        return

    # --- –°–ø–∏—Å–∞–Ω–∏–µ –∑–æ–ª–æ—Ç–∞ ---
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é update_player_xp —Å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º –∑–æ–ª–æ—Ç–æ–º
    _, _ = await update_player_xp(user_id, gained_gold=-actual_cost)

    # –°–∫–æ–ª—å–∫–æ –µ–¥–∏–Ω–∏—Ü —Ä–µ—Å—É—Ä—Å–∞ –±—ã–ª–æ —Ä–µ–∞–ª—å–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ
    actual_healed_amount = target_value - current_value

    logging.info(f"User {user_id} healed {resource_name} by {actual_healed_amount} for {actual_cost} gold. New value: {target_value}")

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ª–µ–∫–∞—Ä—è
    await callback.message.edit_text(
        f"–í—ã —É—Å–ø–µ—à–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ {resource_name} –Ω–∞ <b>{actual_healed_amount}</b> –µ–¥. –∑–∞ {actual_cost}üí∞!\n"
        f"<i>(–¢–µ–ø–µ—Ä—å —É –≤–∞—Å {target_value} {resource_name})</i>",
        parse_mode="HTML"
    )
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ, —Ç–∞–∫ –∫–∞–∫ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –ª–µ–∫–∞—Ä–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–æ
    await state.clear()


# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏ –õ–µ–∫–∞—Ä—è –í–ù–ï —Å–æ—Å—Ç–æ—è–Ω–∏—è ---
@router.callback_query(F.data.startswith("heal:"))
async def handle_healer_action_outside_state(callback: types.CallbackQuery):
    """
    –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫–∏ –ª–µ–∫–∞—Ä—è, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è
    –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ HealerStates.choosing_heal_option.
    """
    logging.warning(f"User {callback.from_user.id} pressed healer button outside of state. Callback: {callback.data}")
    # –°–æ–æ–±—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, —á—Ç–æ –º–µ–Ω—é –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ
    await callback.answer("–≠—Ç–æ –º–µ–Ω—é –ª–µ–∫–∞—Ä—è –±–æ–ª—å—à–µ –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ.", show_alert=True)
    # –ü—ã—Ç–∞–µ–º—Å—è —É–±—Ä–∞—Ç—å –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∏–∑ —Å—Ç–∞—Ä–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    try:
        await callback.message.edit_reply_markup(reply_markup=None)
    except Exception as e:
        # –û—à–∏–±–∫–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ç–∞—Ä—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –æ–∂–∏–¥–∞–µ–º—ã, –ø—Ä–æ—Å—Ç–æ –ª–æ–≥–∏—Ä—É–µ–º
        logging.warning(f"Could not edit old healer message markup for user {callback.from_user.id}: {e}")
